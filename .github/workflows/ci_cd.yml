name: Continous Integration / Continous Deployment
on:
  push:
    branches:
      - main
      - dev

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  ELIXIR_VERSION: "1.14.0"
  OTP_VERSION: "25.0"

jobs:
  test:
    name: Test elixir app
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    services:
      db:
        env:
          POSTGRES_PASSWORD: postgres
        image: postgres:13
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: ["5432:5432"]
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.OTP_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}
      - run: mix format --check-formatted
      - run: mix test
  deploy-staging:
    name: Deploy app to staging
    needs:
      - test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only --config ./fly.staging.toml
  deploy-production:
    name: Deploy app to production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only --config ./fly.production.toml
